#!/bin/bash

# Usage:
# bash C_Resolve_Subdomains.sh [optional: single_domain | list.txt | output/subdomains/]

set -euo pipefail


# Get fresh resolvers
echo "[*] Downloading best DNS resolvers..."
curl -s https://raw.githubusercontent.com/trickest/resolvers/main/resolvers.txt -o resolvers.txt


INPUT=${1:-"default"}
BASE_DIR="output/subdomains"
RESOLVERS="resolvers.txt"


echo $RESOLVERS


# ---------------------- FUNCTIONS -----------------------

resolve_domain() {
    local domain=$1
    local domain_path="$BASE_DIR/$domain"
    local subs_file="$domain_path/subdomains/all_subs.txt"
    local resolved_dir="$domain_path/resolved"

    if [ ! -f "$subs_file" ]; then
        echo "[!] Skipping $domain: Missing $subs_file"
        return
    fi

    echo "[*] Resolving domain: $domain"
    mkdir -p "$resolved_dir"

    # DNSX
    dnsx -l "$subs_file" -silent -resolvers "$RESOLVERS" -o "$resolved_dir/dnsx_resolved.txt"

    # PureDNS
    puredns resolve "$subs_file" --resolvers "$RESOLVERS" --write "$resolved_dir/puredns_resolved.txt" --quiet

    # MassDNS
    massdns -r "$RESOLVERS" -t A -o S -w "$resolved_dir/massdns.txt" "$subs_file"

    # Aggregate all resolved domains
    {
        cat "$resolved_dir/dnsx_resolved.txt"
        cat "$resolved_dir/puredns_resolved.txt"
        cut -d ' ' -f1 "$resolved_dir/massdns.txt"
    } | sort -u > "$resolved_dir/resolved.txt"

    echo "[✓] Resolution complete for $domain"
}

scan_open_ports() {
    local domain=$1
    local resolved_dir="$BASE_DIR/$domain/resolved"
    local open_ports_dir="$BASE_DIR/$domain/open_ports"
    local massdns_output="$resolved_dir/massdns.txt"

    echo "[*] Extracting IPs for port scanning..."
    mkdir -p "$open_ports_dir"

    cut -d ' ' -f3 "$massdns_output" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' \
        | sort -u > "$open_ports_dir/ips.txt"

    if [ -s "$open_ports_dir/ips.txt" ]; then
        echo "[*] Scanning ports for $domain..."
        masscan -p1-65535 -iL "$open_ports_dir/ips.txt" --rate=1000 -oG "$open_ports_dir/masscan.grep"

        awk '
            /^Host: / {
                ip=$2
                split($4, portinfo, "/")
                print ip ":" portinfo[1]
            }
        ' "$open_ports_dir/masscan.grep" | sort -u > "$open_ports_dir/open_ports.txt"

        echo "[✓] Ports scanned for $domain — results in $open_ports_dir/open_ports.txt"
    else
        echo "[!] No IPs to scan for $domain"
    fi
}

# ---------------------- INPUT LOGIC -----------------------

DOMAINS=()

if [ "$INPUT" = "default" ]; then
    echo "[*] No input provided — scanning all domains under $BASE_DIR"
    for d in "$BASE_DIR"/*; do
        [ -d "$d" ] || continue
        domain=$(basename "$d")
        DOMAINS+=("$domain")
    done
elif [ -d "$INPUT" ]; then
    echo "[*] Folder input: $INPUT"
    for d in "$INPUT"/*; do
        [ -d "$d" ] || continue
        domain=$(basename "$d")
        DOMAINS+=("$domain")
    done
elif [ -f "$INPUT" ]; then
    echo "[*] Reading domains from file: $INPUT"
    mapfile -t DOMAINS < "$INPUT"
else
    echo "[*] Single domain provided: $INPUT"
    DOMAINS=("$INPUT")
fi

# ---------------------- PROCESSING -----------------------

for domain in "${DOMAINS[@]}"; do
    resolve_domain "$domain"
    scan_open_ports "$domain"
done

echo "[✓] All domains processed successfully."
