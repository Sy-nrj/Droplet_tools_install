#!/usr/bin/env bash
set -euo pipefail

resolve_tools=(dnsx puredns massdns)
input="$1"

# Prep folders
mkdir -p resolved
mkdir -p ports

process_domain() {
  local domain="$1"
  local base
  base="${domain//\//_}"  # sanitize

  echo "[*] Resolving $domain"

  local agg_file="resolved/${base}_resolved.txt"
  : >"$agg_file"

  for tool in "${resolve_tools[@]}"; do
    local out="resolved/${base}_${tool}.txt"
    echo "[*] Running $tool on $domain â†’ $out"
    if [[ "$tool" == "dnsx" ]]; then
      dnsx -d "$domain" -a -o "$out"
    else
      puredns resolve "$domain" > "$out"
    fi
    sort -u "$out" >> "$agg_file"
  done

  sort -u "$agg_file" -o "$agg_file"
  cp "$agg_file" "resolved/${base}_resolved.txt"

  echo "[*] Scanning IPs from $agg_file"
  local ports_out="ports/${base}_open_ports.txt"
  : >"$ports_out"
  while read -r ip; do
    [[ -z "$ip" ]] && continue
    echo "[*] Scanning $ip"
    masscan "$ip" -p1-65535 --rate=1000 \
      --open-only -oJ - | jq -r ".[] | \"\(.ip) \(.ports[].port)/\(.ports[].proto)\"" \
      >>"$ports_out"
  done <"$agg_file"
}

# Main logic
if [[ $# -eq 0 ]]; then
  echo "Usage: $0 <domain_or_list.txt>"
  exit 1
fi

if [[ -f "$input" ]]; then
  while read -r line; do
    [[ -z "$line" || "${line:0:1}" == "#" ]] && continue
    process_domain "$line"
  done <"$input"
else
  process_domain "$input"
fi

echo "[*] Done! Results in ./resolved/ and ./ports/"
