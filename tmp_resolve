#!/bin/bash

set -euo pipefail

# Define constants
RESOLVERS="resolvers.txt"
BASE_PATH="$PWD"
OUTPUT_DIR="output"

# Download fresh resolvers if not present
if [ ! -f "$RESOLVERS" ]; then
    echo "[*] Downloading best DNS resolvers..."
    curl -s https://raw.githubusercontent.com/trickest/resolvers/main/resolvers.txt -o "$RESOLVERS"
fi

# Function to resolve domains using dnsx, puredns, and massdns
resolve_domain() {
    local base_path="$1"
    local domain="$2"
    local subs_file="$base_path/$domain/subdomains/all_subs.txt"
    local resolved_dir="$base_path/$domain/resolved"

    if [ ! -f "$subs_file" ]; then
        echo "[!] Skipping $domain: Missing $subs_file"
        return
    fi

    echo "[*] Resolving subdomains for $domain"
    mkdir -p "$resolved_dir"

    # Resolve using dnsx
    dnsx -l "$subs_file" -silent -r "$RESOLVERS" -o "$resolved_dir/dnsx_resolved.txt"

    # Resolve using puredns
    puredns resolve "$subs_file" -r "$RESOLVERS" --write "$resolved_dir/puredns_resolved.txt" --quiet

    # Resolve using massdns
    massdns -r "$RESOLVERS" -t A -o S -w "$resolved_dir/massdns.txt" "$subs_file"

    # Aggregate all results
    {
        cat "$resolved_dir/dnsx_resolved.txt" 2>/dev/null
        cat "$resolved_dir/puredns_resolved.txt" 2>/dev/null
        cut -d ' ' -f1 "$resolved_dir/massdns.txt" 2>/dev/null
    } | sort -u > "$resolved_dir/resolved.txt"

    echo "[✓] Resolution complete for $domain"
}

# Function to scan open ports using masscan
scan_open_ports() {
    local base_path="$1"
    local domain="$2"
    local resolved_dir="$base_path/$domain/resolved"
    local open_ports_dir="$base_path/$domain/open_ports"
    local massdns_output="$resolved_dir/massdns.txt"

    echo "[*] Extracting IPs for port scanning for $domain..."
    mkdir -p "$open_ports_dir"

    if [ ! -f "$massdns_output" ]; then
        echo "[!] Skipping port scan for $domain: Missing $massdns_output"
        return
    fi

    cut -d ' ' -f3 "$massdns_output" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | sort -u > "$open_ports_dir/ips.txt"

    if [ -s "$open_ports_dir/ips.txt" ]; then
        echo "[*] Scanning all ports for IPs in $domain..."
        masscan -p1-65535 -iL "$open_ports_dir/ips.txt" --rate=1000 -oG "$open_ports_dir/masscan.grep"

        awk ' /^Host: / { ip=$2 split($4, portinfo, "/") print ip ":" portinfo[1] } ' "$open_ports_dir/masscan.grep" | sort -u > "$open_ports_dir/open_ports.txt"

        echo "[✓] Ports scanned for $domain — results in $open_ports_dir/open_ports.txt"
    else
        echo "[!] No valid IPs found to scan for $domain"
    fi
}

# Main script logic
if [ $# -eq 0 ]; then
    echo "[*] No arguments provided — processing all subfolders in $PWD"
    for dir in */; do
        if [ -d "$dir/subdomains" ] && [ -f "$dir/subdomains/all_subs.txt" ]; then
            domain=$(basename "$dir")
            echo "[*] Processing domain: $domain"
            resolve_domain "$BASE_PATH" "$domain"
            scan_open_ports "$BASE_PATH" "$domain"
        fi
    done
else
    for domain in "$@"; do
        if [ -f "$domain" ]; then
            echo "[*] Reading domains from file: $domain"
            while IFS= read -r line; do
                resolve_domain "$BASE_PATH" "$line"
                scan_open_ports "$BASE_PATH" "$line"
            done < "$domain"
        else
            resolve_domain "$BASE_PATH" "$domain"
            scan_open_ports "$BASE_PATH" "$domain"
        fi
    done
fi

echo "[✓] All domains processed successfully."
